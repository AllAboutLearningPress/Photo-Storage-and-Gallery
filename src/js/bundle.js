/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/bootstrap/js/dist/base-component.js":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/base-component.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap base-component.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ./dom/data.js */ \"./node_modules/bootstrap/js/dist/dom/data.js\")) :\n  0;\n}(this, (function (Data) { 'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  var Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): base-component.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const VERSION = '5.0.0-beta3';\n\n  class BaseComponent {\n    constructor(element) {\n      element = typeof element === 'string' ? document.querySelector(element) : element;\n\n      if (!element) {\n        return;\n      }\n\n      this._element = element;\n      Data__default['default'].set(this._element, this.constructor.DATA_KEY, this);\n    }\n\n    dispose() {\n      Data__default['default'].remove(this._element, this.constructor.DATA_KEY);\n      this._element = null;\n    }\n    /** Static */\n\n\n    static getInstance(element) {\n      return Data__default['default'].get(element, this.DATA_KEY);\n    }\n\n    static get VERSION() {\n      return VERSION;\n    }\n\n  }\n\n  return BaseComponent;\n\n})));\n//# sourceMappingURL=base-component.js.map\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./node_modules/bootstrap/js/dist/base-component.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/data.js":
/*!****************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/data.js ***!
  \****************************************************/
/***/ (function(module) {

eval("/*!\n  * Bootstrap data.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n}(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): dom/data.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n  const elementMap = new Map();\n  var data = {\n    set(element, key, instance) {\n      if (!elementMap.has(element)) {\n        elementMap.set(element, new Map());\n      }\n\n      const instanceMap = elementMap.get(element); // make it clear we only want one instance per element\n      // can be removed later when multiple key/instances are fine to be used\n\n      if (!instanceMap.has(key) && instanceMap.size !== 0) {\n        // eslint-disable-next-line no-console\n        console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);\n        return;\n      }\n\n      instanceMap.set(key, instance);\n    },\n\n    get(element, key) {\n      if (elementMap.has(element)) {\n        return elementMap.get(element).get(key) || null;\n      }\n\n      return null;\n    },\n\n    remove(element, key) {\n      if (!elementMap.has(element)) {\n        return;\n      }\n\n      const instanceMap = elementMap.get(element);\n      instanceMap.delete(key); // free up element references if there are no instances left for an element\n\n      if (instanceMap.size === 0) {\n        elementMap.delete(element);\n      }\n    }\n\n  };\n\n  return data;\n\n})));\n//# sourceMappingURL=data.js.map\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./node_modules/bootstrap/js/dist/dom/data.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/event-handler.js":
/*!*************************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/event-handler.js ***!
  \*************************************************************/
/***/ (function(module) {

eval("/*!\n  * Bootstrap event-handler.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n}(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): util/index.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  const getjQuery = () => {\n    const {\n      jQuery\n    } = window;\n\n    if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n      return jQuery;\n    }\n\n    return null;\n  };\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): dom/event-handler.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\n  const stripNameRegex = /\\..*/;\n  const stripUidRegex = /::\\d+$/;\n  const eventRegistry = {}; // Events storage\n\n  let uidEvent = 1;\n  const customEvents = {\n    mouseenter: 'mouseover',\n    mouseleave: 'mouseout'\n  };\n  const nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);\n  /**\n   * ------------------------------------------------------------------------\n   * Private methods\n   * ------------------------------------------------------------------------\n   */\n\n  function getUidEvent(element, uid) {\n    return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n  }\n\n  function getEvent(element) {\n    const uid = getUidEvent(element);\n    element.uidEvent = uid;\n    eventRegistry[uid] = eventRegistry[uid] || {};\n    return eventRegistry[uid];\n  }\n\n  function bootstrapHandler(element, fn) {\n    return function handler(event) {\n      event.delegateTarget = element;\n\n      if (handler.oneOff) {\n        EventHandler.off(element, event.type, fn);\n      }\n\n      return fn.apply(element, [event]);\n    };\n  }\n\n  function bootstrapDelegationHandler(element, selector, fn) {\n    return function handler(event) {\n      const domElements = element.querySelectorAll(selector);\n\n      for (let {\n        target\n      } = event; target && target !== this; target = target.parentNode) {\n        for (let i = domElements.length; i--;) {\n          if (domElements[i] === target) {\n            event.delegateTarget = target;\n\n            if (handler.oneOff) {\n              // eslint-disable-next-line unicorn/consistent-destructuring\n              EventHandler.off(element, event.type, fn);\n            }\n\n            return fn.apply(target, [event]);\n          }\n        }\n      } // To please ESLint\n\n\n      return null;\n    };\n  }\n\n  function findHandler(events, handler, delegationSelector = null) {\n    const uidEventList = Object.keys(events);\n\n    for (let i = 0, len = uidEventList.length; i < len; i++) {\n      const event = events[uidEventList[i]];\n\n      if (event.originalHandler === handler && event.delegationSelector === delegationSelector) {\n        return event;\n      }\n    }\n\n    return null;\n  }\n\n  function normalizeParams(originalTypeEvent, handler, delegationFn) {\n    const delegation = typeof handler === 'string';\n    const originalHandler = delegation ? delegationFn : handler; // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n\n    let typeEvent = originalTypeEvent.replace(stripNameRegex, '');\n    const custom = customEvents[typeEvent];\n\n    if (custom) {\n      typeEvent = custom;\n    }\n\n    const isNative = nativeEvents.has(typeEvent);\n\n    if (!isNative) {\n      typeEvent = originalTypeEvent;\n    }\n\n    return [delegation, originalHandler, typeEvent];\n  }\n\n  function addHandler(element, originalTypeEvent, handler, delegationFn, oneOff) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n\n    if (!handler) {\n      handler = delegationFn;\n      delegationFn = null;\n    }\n\n    const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);\n    const events = getEvent(element);\n    const handlers = events[typeEvent] || (events[typeEvent] = {});\n    const previousFn = findHandler(handlers, originalHandler, delegation ? handler : null);\n\n    if (previousFn) {\n      previousFn.oneOff = previousFn.oneOff && oneOff;\n      return;\n    }\n\n    const uid = getUidEvent(originalHandler, originalTypeEvent.replace(namespaceRegex, ''));\n    const fn = delegation ? bootstrapDelegationHandler(element, handler, delegationFn) : bootstrapHandler(element, handler);\n    fn.delegationSelector = delegation ? handler : null;\n    fn.originalHandler = originalHandler;\n    fn.oneOff = oneOff;\n    fn.uidEvent = uid;\n    handlers[uid] = fn;\n    element.addEventListener(typeEvent, fn, delegation);\n  }\n\n  function removeHandler(element, events, typeEvent, handler, delegationSelector) {\n    const fn = findHandler(events[typeEvent], handler, delegationSelector);\n\n    if (!fn) {\n      return;\n    }\n\n    element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n    delete events[typeEvent][fn.uidEvent];\n  }\n\n  function removeNamespacedHandlers(element, events, typeEvent, namespace) {\n    const storeElementEvent = events[typeEvent] || {};\n    Object.keys(storeElementEvent).forEach(handlerKey => {\n      if (handlerKey.includes(namespace)) {\n        const event = storeElementEvent[handlerKey];\n        removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);\n      }\n    });\n  }\n\n  const EventHandler = {\n    on(element, event, handler, delegationFn) {\n      addHandler(element, event, handler, delegationFn, false);\n    },\n\n    one(element, event, handler, delegationFn) {\n      addHandler(element, event, handler, delegationFn, true);\n    },\n\n    off(element, originalTypeEvent, handler, delegationFn) {\n      if (typeof originalTypeEvent !== 'string' || !element) {\n        return;\n      }\n\n      const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);\n      const inNamespace = typeEvent !== originalTypeEvent;\n      const events = getEvent(element);\n      const isNamespace = originalTypeEvent.startsWith('.');\n\n      if (typeof originalHandler !== 'undefined') {\n        // Simplest case: handler is passed, remove that listener ONLY.\n        if (!events || !events[typeEvent]) {\n          return;\n        }\n\n        removeHandler(element, events, typeEvent, originalHandler, delegation ? handler : null);\n        return;\n      }\n\n      if (isNamespace) {\n        Object.keys(events).forEach(elementEvent => {\n          removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n        });\n      }\n\n      const storeElementEvent = events[typeEvent] || {};\n      Object.keys(storeElementEvent).forEach(keyHandlers => {\n        const handlerKey = keyHandlers.replace(stripUidRegex, '');\n\n        if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n          const event = storeElementEvent[keyHandlers];\n          removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);\n        }\n      });\n    },\n\n    trigger(element, event, args) {\n      if (typeof event !== 'string' || !element) {\n        return null;\n      }\n\n      const $ = getjQuery();\n      const typeEvent = event.replace(stripNameRegex, '');\n      const inNamespace = event !== typeEvent;\n      const isNative = nativeEvents.has(typeEvent);\n      let jQueryEvent;\n      let bubbles = true;\n      let nativeDispatch = true;\n      let defaultPrevented = false;\n      let evt = null;\n\n      if (inNamespace && $) {\n        jQueryEvent = $.Event(event, args);\n        $(element).trigger(jQueryEvent);\n        bubbles = !jQueryEvent.isPropagationStopped();\n        nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n        defaultPrevented = jQueryEvent.isDefaultPrevented();\n      }\n\n      if (isNative) {\n        evt = document.createEvent('HTMLEvents');\n        evt.initEvent(typeEvent, bubbles, true);\n      } else {\n        evt = new CustomEvent(event, {\n          bubbles,\n          cancelable: true\n        });\n      } // merge custom information in our event\n\n\n      if (typeof args !== 'undefined') {\n        Object.keys(args).forEach(key => {\n          Object.defineProperty(evt, key, {\n            get() {\n              return args[key];\n            }\n\n          });\n        });\n      }\n\n      if (defaultPrevented) {\n        evt.preventDefault();\n      }\n\n      if (nativeDispatch) {\n        element.dispatchEvent(evt);\n      }\n\n      if (evt.defaultPrevented && typeof jQueryEvent !== 'undefined') {\n        jQueryEvent.preventDefault();\n      }\n\n      return evt;\n    }\n\n  };\n\n  return EventHandler;\n\n})));\n//# sourceMappingURL=event-handler.js.map\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./node_modules/bootstrap/js/dist/dom/event-handler.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/dom/manipulator.js":
/*!***********************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/dom/manipulator.js ***!
  \***********************************************************/
/***/ (function(module) {

eval("/*!\n  * Bootstrap manipulator.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n}(this, (function () { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): dom/manipulator.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  function normalizeData(val) {\n    if (val === 'true') {\n      return true;\n    }\n\n    if (val === 'false') {\n      return false;\n    }\n\n    if (val === Number(val).toString()) {\n      return Number(val);\n    }\n\n    if (val === '' || val === 'null') {\n      return null;\n    }\n\n    return val;\n  }\n\n  function normalizeDataKey(key) {\n    return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`);\n  }\n\n  const Manipulator = {\n    setDataAttribute(element, key, value) {\n      element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);\n    },\n\n    removeDataAttribute(element, key) {\n      element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);\n    },\n\n    getDataAttributes(element) {\n      if (!element) {\n        return {};\n      }\n\n      const attributes = {};\n      Object.keys(element.dataset).filter(key => key.startsWith('bs')).forEach(key => {\n        let pureKey = key.replace(/^bs/, '');\n        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);\n        attributes[pureKey] = normalizeData(element.dataset[key]);\n      });\n      return attributes;\n    },\n\n    getDataAttribute(element, key) {\n      return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));\n    },\n\n    offset(element) {\n      const rect = element.getBoundingClientRect();\n      return {\n        top: rect.top + document.body.scrollTop,\n        left: rect.left + document.body.scrollLeft\n      };\n    },\n\n    position(element) {\n      return {\n        top: element.offsetTop,\n        left: element.offsetLeft\n      };\n    }\n\n  };\n\n  return Manipulator;\n\n})));\n//# sourceMappingURL=manipulator.js.map\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./node_modules/bootstrap/js/dist/dom/manipulator.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/toast.js":
/*!*************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/toast.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*!\n  * Bootstrap toast.js v5.0.0-beta3 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(/*! ./dom/data.js */ \"./node_modules/bootstrap/js/dist/dom/data.js\"), __webpack_require__(/*! ./dom/event-handler.js */ \"./node_modules/bootstrap/js/dist/dom/event-handler.js\"), __webpack_require__(/*! ./dom/manipulator.js */ \"./node_modules/bootstrap/js/dist/dom/manipulator.js\"), __webpack_require__(/*! ./base-component.js */ \"./node_modules/bootstrap/js/dist/base-component.js\")) :\n  0;\n}(this, (function (Data, EventHandler, Manipulator, BaseComponent) { 'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  var Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);\n  var EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n  var Manipulator__default = /*#__PURE__*/_interopDefaultLegacy(Manipulator);\n  var BaseComponent__default = /*#__PURE__*/_interopDefaultLegacy(BaseComponent);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): util/index.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  const MILLISECONDS_MULTIPLIER = 1000;\n  const TRANSITION_END = 'transitionend'; // Shoutout AngusCroll (https://goo.gl/pxwQGp)\n\n  const toType = obj => {\n    if (obj === null || obj === undefined) {\n      return `${obj}`;\n    }\n\n    return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase();\n  };\n\n  const getTransitionDurationFromElement = element => {\n    if (!element) {\n      return 0;\n    } // Get transition-duration of the element\n\n\n    let {\n      transitionDuration,\n      transitionDelay\n    } = window.getComputedStyle(element);\n    const floatTransitionDuration = Number.parseFloat(transitionDuration);\n    const floatTransitionDelay = Number.parseFloat(transitionDelay); // Return 0 if element or transition duration is not found\n\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0;\n    } // If multiple durations are defined, take the first\n\n\n    transitionDuration = transitionDuration.split(',')[0];\n    transitionDelay = transitionDelay.split(',')[0];\n    return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n  };\n\n  const triggerTransitionEnd = element => {\n    element.dispatchEvent(new Event(TRANSITION_END));\n  };\n\n  const isElement = obj => (obj[0] || obj).nodeType;\n\n  const emulateTransitionEnd = (element, duration) => {\n    let called = false;\n    const durationPadding = 5;\n    const emulatedDuration = duration + durationPadding;\n\n    function listener() {\n      called = true;\n      element.removeEventListener(TRANSITION_END, listener);\n    }\n\n    element.addEventListener(TRANSITION_END, listener);\n    setTimeout(() => {\n      if (!called) {\n        triggerTransitionEnd(element);\n      }\n    }, emulatedDuration);\n  };\n\n  const typeCheckConfig = (componentName, config, configTypes) => {\n    Object.keys(configTypes).forEach(property => {\n      const expectedTypes = configTypes[property];\n      const value = config[property];\n      const valueType = value && isElement(value) ? 'element' : toType(value);\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(`${componentName.toUpperCase()}: ` + `Option \"${property}\" provided type \"${valueType}\" ` + `but expected type \"${expectedTypes}\".`);\n      }\n    });\n  };\n\n  const reflow = element => element.offsetHeight;\n\n  const getjQuery = () => {\n    const {\n      jQuery\n    } = window;\n\n    if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n      return jQuery;\n    }\n\n    return null;\n  };\n\n  const onDOMContentLoaded = callback => {\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', callback);\n    } else {\n      callback();\n    }\n  };\n\n  const defineJQueryPlugin = (name, plugin) => {\n    onDOMContentLoaded(() => {\n      const $ = getjQuery();\n      /* istanbul ignore if */\n\n      if ($) {\n        const JQUERY_NO_CONFLICT = $.fn[name];\n        $.fn[name] = plugin.jQueryInterface;\n        $.fn[name].Constructor = plugin;\n\n        $.fn[name].noConflict = () => {\n          $.fn[name] = JQUERY_NO_CONFLICT;\n          return plugin.jQueryInterface;\n        };\n      }\n    });\n  };\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta3): toast.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NAME = 'toast';\n  const DATA_KEY = 'bs.toast';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`;\n  const EVENT_HIDE = `hide${EVENT_KEY}`;\n  const EVENT_HIDDEN = `hidden${EVENT_KEY}`;\n  const EVENT_SHOW = `show${EVENT_KEY}`;\n  const EVENT_SHOWN = `shown${EVENT_KEY}`;\n  const CLASS_NAME_FADE = 'fade';\n  const CLASS_NAME_HIDE = 'hide';\n  const CLASS_NAME_SHOW = 'show';\n  const CLASS_NAME_SHOWING = 'showing';\n  const DefaultType = {\n    animation: 'boolean',\n    autohide: 'boolean',\n    delay: 'number'\n  };\n  const Default = {\n    animation: true,\n    autohide: true,\n    delay: 5000\n  };\n  const SELECTOR_DATA_DISMISS = '[data-bs-dismiss=\"toast\"]';\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Toast extends BaseComponent__default['default'] {\n    constructor(element, config) {\n      super(element);\n      this._config = this._getConfig(config);\n      this._timeout = null;\n\n      this._setListeners();\n    } // Getters\n\n\n    static get DefaultType() {\n      return DefaultType;\n    }\n\n    static get Default() {\n      return Default;\n    }\n\n    static get DATA_KEY() {\n      return DATA_KEY;\n    } // Public\n\n\n    show() {\n      const showEvent = EventHandler__default['default'].trigger(this._element, EVENT_SHOW);\n\n      if (showEvent.defaultPrevented) {\n        return;\n      }\n\n      this._clearTimeout();\n\n      if (this._config.animation) {\n        this._element.classList.add(CLASS_NAME_FADE);\n      }\n\n      const complete = () => {\n        this._element.classList.remove(CLASS_NAME_SHOWING);\n\n        this._element.classList.add(CLASS_NAME_SHOW);\n\n        EventHandler__default['default'].trigger(this._element, EVENT_SHOWN);\n\n        if (this._config.autohide) {\n          this._timeout = setTimeout(() => {\n            this.hide();\n          }, this._config.delay);\n        }\n      };\n\n      this._element.classList.remove(CLASS_NAME_HIDE);\n\n      reflow(this._element);\n\n      this._element.classList.add(CLASS_NAME_SHOWING);\n\n      if (this._config.animation) {\n        const transitionDuration = getTransitionDurationFromElement(this._element);\n        EventHandler__default['default'].one(this._element, 'transitionend', complete);\n        emulateTransitionEnd(this._element, transitionDuration);\n      } else {\n        complete();\n      }\n    }\n\n    hide() {\n      if (!this._element.classList.contains(CLASS_NAME_SHOW)) {\n        return;\n      }\n\n      const hideEvent = EventHandler__default['default'].trigger(this._element, EVENT_HIDE);\n\n      if (hideEvent.defaultPrevented) {\n        return;\n      }\n\n      const complete = () => {\n        this._element.classList.add(CLASS_NAME_HIDE);\n\n        EventHandler__default['default'].trigger(this._element, EVENT_HIDDEN);\n      };\n\n      this._element.classList.remove(CLASS_NAME_SHOW);\n\n      if (this._config.animation) {\n        const transitionDuration = getTransitionDurationFromElement(this._element);\n        EventHandler__default['default'].one(this._element, 'transitionend', complete);\n        emulateTransitionEnd(this._element, transitionDuration);\n      } else {\n        complete();\n      }\n    }\n\n    dispose() {\n      this._clearTimeout();\n\n      if (this._element.classList.contains(CLASS_NAME_SHOW)) {\n        this._element.classList.remove(CLASS_NAME_SHOW);\n      }\n\n      EventHandler__default['default'].off(this._element, EVENT_CLICK_DISMISS);\n      super.dispose();\n      this._config = null;\n    } // Private\n\n\n    _getConfig(config) {\n      config = { ...Default,\n        ...Manipulator__default['default'].getDataAttributes(this._element),\n        ...(typeof config === 'object' && config ? config : {})\n      };\n      typeCheckConfig(NAME, config, this.constructor.DefaultType);\n      return config;\n    }\n\n    _setListeners() {\n      EventHandler__default['default'].on(this._element, EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, () => this.hide());\n    }\n\n    _clearTimeout() {\n      clearTimeout(this._timeout);\n      this._timeout = null;\n    } // Static\n\n\n    static jQueryInterface(config) {\n      return this.each(function () {\n        let data = Data__default['default'].get(this, DATA_KEY);\n\n        const _config = typeof config === 'object' && config;\n\n        if (!data) {\n          data = new Toast(this, _config);\n        }\n\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(`No method named \"${config}\"`);\n          }\n\n          data[config](this);\n        }\n      });\n    }\n\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   * add .Toast to jQuery only if jQuery is present\n   */\n\n\n  defineJQueryPlugin(NAME, Toast);\n\n  return Toast;\n\n})));\n//# sourceMappingURL=toast.js.map\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./node_modules/bootstrap/js/dist/toast.js?");

/***/ }),

/***/ "./src/js/components/GlobalDropTarget.js":
/*!***********************************************!*\
  !*** ./src/js/components/GlobalDropTarget.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/utils */ \"./src/js/util/utils.js\");\n/* harmony import */ var _Notificator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Notificator */ \"./src/js/components/Notificator.js\");\n\n\n\nconst dropTargetAvailableEventName = 'drop-target-active';\nconst dropTargetUnavailableEventName = 'drop-target-inactive';\n\nconst activeDropTargetKlass = 'is-active';\n\nfunction setImmediate(callback, ...args) {\n  let cancelled = false;\n  Promise.resolve().then(() => cancelled || callback(...args));\n  return () => {\n    cancelled = true;\n  };\n}\n\n// https://stackoverflow.com/a/53058574/718630 :\n\n/**\n * Drop handler function to get all files entries\n * @param dataTransferItemList{DataTransferItemList} - a list of files from a drop: https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList\n * @returns {Promise<[FileSystemFileEntry]>} - a promise resolving to an array of file entries: https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\n */\nasync function getAllFileEntries(dataTransferItemList) {\n  let fileEntries = [];\n  // Use BFS to traverse entire directory/file structure\n  let queue = [];\n  // Unfortunately dataTransferItemList is not iterable i.e. no forEach\n  for (let i = 0; i < dataTransferItemList.length; i++) {\n    queue.push(dataTransferItemList[i].webkitGetAsEntry());\n  }\n  while (queue.length > 0) {\n    let entry = queue.shift();\n    if (entry.isFile) {\n      fileEntries.push(entry);\n    } else if (entry.isDirectory) {\n      queue.push(...(await readAllDirectoryEntries(entry.createReader())));\n    }\n  }\n  return fileEntries;\n}\n\n// Get all the entries (files or sub-directories) in a directory\n// by calling readEntries until it returns empty array\nasync function readAllDirectoryEntries(directoryReader) {\n  let entries = [];\n  let readEntries = await readEntriesPromise(directoryReader);\n  while (readEntries.length > 0) {\n    entries.push(...readEntries);\n    readEntries = await readEntriesPromise(directoryReader);\n  }\n  return entries;\n}\n\n// Wrap readEntries in a promise to make working with readEntries easier\n// readEntries will return only some of the entries in a directory\n// e.g. Chrome returns at most 100 entries at a time\nasync function readEntriesPromise(directoryReader) {\n  try {\n    return await new Promise((resolve, reject) => {\n      directoryReader.readEntries(resolve, reject);\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n// get a file from FileEntry, promisified\nasync function getFile(fileEntry) {\n  try {\n    return await new Promise((resolve, reject) => fileEntry.file(resolve, reject));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nlet instance = null;\n\nlet isMouseDown = false;\n\n/**\n * Global drop target and a Singleton.\n * Processes drag and drop, dispatches custom event with an array of dropped File objects (see below).\n *\n * Custom events (which bubble) are triggered at the drop target DOM element:\n * - `drop-target-active`: the drop target is shown and ready for drop, the event passes along the `dataTransfer` object for the `dragenter` event\n * - `drop-target-inactive`: the drop target is hidden\n * - `items-dropped`: the items were the dropped at the target, the event passes along the array of File objects\n *\n * For constructor, pass an optional second argument — an array of strings, representing allowed MIME types for the drop,\n * by default it allows all types using a single `'*'` string in the array.\n */\n\nclass GlobalDropTarget {\n  constructor(allowedMimeTypes = ['*']) {\n    if (instance) {\n      return instance;\n    }\n\n    this.dropTarget = document.querySelector('.js-drop-target');\n\n    if (!this.dropTarget) {\n      return false;\n    }\n\n    this.allowedMimeTypes = allowedMimeTypes;\n\n    const that = this;\n\n    this.dragging = false;\n\n    let count = 0;\n    let cancelImmediate = () => {};\n\n    this.notificator = new _Notificator__WEBPACK_IMPORTED_MODULE_1__.default();\n\n    /**\n     * Uploading directories requires using DataTransferItemList (instead of FileList) which supports `webkitGetAsEntry()` on items.\n     * Using `DataTransferItemList` means that instead of an actual file we get FileSystemFileEntry object: https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\n     * This object needs to be converted to a file using an async `.file()` method.\n     * Because of that, `processDroppedFiles` outputs an array of promises.\n     */\n    async function processDroppedFiles(dataTransferItemList) {\n      const allItems = await getAllFileEntries(dataTransferItemList);\n\n      // convert file entry to File object, filter allowed files by a MIME type\n      const settledFilePromises = await Promise.allSettled(\n        allItems.map(async (entry) => await getFile(entry))\n      );\n      const allowedFiles = settledFilePromises\n        // we're expecting no errors\n        .map((result) => result.value)\n        .filter(\n          (item) => that.allowedMimeTypes.includes('*') || that.allowedMimeTypes.includes(item.type)\n        );\n\n      that.dropTarget.dispatchEvent(\n        new CustomEvent('items-dropped', {\n          bubbles: true,\n          detail: {\n            fileArray: allowedFiles,\n          },\n        })\n      );\n\n      // notify if unsupported files were dropped\n      if (allItems.length !== allowedFiles.length) {\n        that.notificator.show('.js-invalid-drop-note');\n      }\n    }\n\n    function isNotDraggedString(dataTransfer) {\n      return !(dataTransfer.items.length === 1 && dataTransfer.items[0].kind === 'string');\n    }\n\n    this.handlers = [\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'mousedown', (e) => {\n        isMouseDown = true;\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'mouseup', (e) => {\n        isMouseDown = false;\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'dragover', (e) => {\n        if (isMouseDown) {\n          return;\n        }\n\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'copy';\n        console.log('dragover', e);\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'dragenter', (e) => {\n        if (isMouseDown) {\n          return;\n        }\n\n        e.preventDefault();\n\n        if (count === 0) {\n          that.dragging = true;\n\n          if (isNotDraggedString(e.dataTransfer)) {\n            that.dropTarget.dispatchEvent(\n              new CustomEvent(dropTargetAvailableEventName, {\n                bubbles: true,\n                detail: {\n                  dataTransfer: e.dataTransfer,\n                },\n              })\n            );\n          }\n\n          console.log('dragenter', e);\n\n        }\n\n        count += 1;\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'dragleave', (e) => {\n        if (isMouseDown) {\n          return;\n        }\n\n        e.preventDefault();\n\n        cancelImmediate = setImmediate(() => {\n          count -= 1;\n\n          if (count === 0) {\n            this.dragging = false;\n\n            if (isNotDraggedString(e.dataTransfer)) {\n              this.dropTarget.dispatchEvent(\n                new CustomEvent(dropTargetUnavailableEventName, {\n                  bubbles: true,\n                })\n              );\n            }\n\n            console.log('dragleave', e);\n\n          }\n        });\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'drop', (e) => {\n        if (isMouseDown) {\n          return;\n        }\n\n        e.preventDefault();\n\n        cancelImmediate();\n\n        if (count > 0) {\n          count = 0;\n          this.dragging = false;\n\n          if (isNotDraggedString(e.dataTransfer)) {\n            // uploading directories requires using DataTransferItemList (instead of FileList) which supports `webkitGetAsEntry()` on items\n            processDroppedFiles(e.dataTransfer.items);\n            this.dropTarget.dispatchEvent(\n              new CustomEvent(dropTargetUnavailableEventName, {\n                bubbles: true,\n              })\n            );\n          }\n        }\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(this.dropTarget, dropTargetAvailableEventName, (e) => {\n        e.target.classList.add(activeDropTargetKlass);\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(this.dropTarget, dropTargetUnavailableEventName, (e) => {\n        e.target.classList.remove(activeDropTargetKlass);\n      }),\n    ];\n\n    this.isInited = true;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GlobalDropTarget);\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/components/GlobalDropTarget.js?");

/***/ }),

/***/ "./src/js/components/Notificator.js":
/*!******************************************!*\
  !*** ./src/js/components/Notificator.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var bootstrap_js_dist_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bootstrap/js/dist/toast */ \"./node_modules/bootstrap/js/dist/toast.js\");\n/* harmony import */ var bootstrap_js_dist_toast__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_dist_toast__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/**\n * A singleton. Handle initialising and showing toasts in a centralised way.\n * Requires a `.js-notification-container` HTML element to be present.\n */\n\nlet instance = null;\n\nclass Notificator {\n  constructor() {\n    if (instance) {\n      return instance;\n    }\n\n    this.container = document.querySelector('.js-notification-container');\n\n    if (!this.container) {\n      return;\n    }\n\n    const that = this;\n\n    this.toasts = [];\n    this.handlers = [];\n\n    this.isInited = true;\n  }\n  getElemAndInstanceBySelector(selector) {\n    const elem = document.querySelector(selector);\n    let instance;\n\n    if (elem) {\n      instance = bootstrap_js_dist_toast__WEBPACK_IMPORTED_MODULE_0___default().getInstance(elem);\n\n      if (!instance) {\n        instance = new (bootstrap_js_dist_toast__WEBPACK_IMPORTED_MODULE_0___default())(elem, {});\n        this.toasts.push(instance);\n      }\n    } else {\n      return {};\n    }\n\n    return {\n      elem,\n      instance,\n    };\n  }\n  show(toastSelector) {\n    const { elem, instance } = this.getElemAndInstanceBySelector(toastSelector);\n\n    if (elem) {\n      // always stack the newest toast at the beginning\n      this.container.insertAdjacentElement('afterbegin', elem);\n      instance.show();\n    }\n  }\n  hide(toastSelector) {\n    const { instance } = this.getElemAndInstanceBySelector(toastSelector);\n\n    instance && instance.hide();\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Notificator);\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/components/Notificator.js?");

/***/ }),

/***/ "./src/js/components/Search.js":
/*!*************************************!*\
  !*** ./src/js/components/Search.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/utils */ \"./src/js/util/utils.js\");\n/* harmony import */ var _util_mediaQueryList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/mediaQueryList */ \"./src/js/util/mediaQueryList.js\");\n/* harmony import */ var _SingleImageDropManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SingleImageDropManager */ \"./src/js/components/SingleImageDropManager.js\");\n\n\n\n\n\n/**\n * Search bar\n */\nconst activeKlass = 'is-searchable';\nconst suggestingKlass = 'is-suggesting';\nconst highlightedSuggestionKlass = 'is-highlighted';\nconst noTransitionKlass = 'has-no-transition';\n\nclass Search {\n  constructor(searchElem) {\n    this.search = searchElem;\n\n    if (!this.search) {\n      return;\n    }\n\n    const that = this;\n\n    this.desktopSearchStyleMq = matchMedia(_util_mediaQueryList__WEBPACK_IMPORTED_MODULE_1__.default.sm);\n\n    this.header = this.search.closest('.js-search-header');\n    this.field = this.search.querySelector('.js-search__field');\n    this.input = this.search.querySelector('.js-search__input');\n    this.searchImageInput = this.search.querySelector('.js-search__image-input');\n    this.suggester = this.search.querySelector('.js-search__suggest');\n\n    this.dropManager = new _SingleImageDropManager__WEBPACK_IMPORTED_MODULE_2__.default();\n\n    function handleFileDrop(e) {\n      const isSearchDrop =\n        !that.dropManager.isInited || that.dropManager.getLatestDropStats().search;\n\n      if (isSearchDrop) {\n        that.handleImageSearch(e.detail.fileArray[0]);\n      }\n    }\n\n    this.handlers = [\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(this.header, 'click', (e) => {\n        const togglerElem = e.target.closest('.js-search__toggle');\n\n        if (togglerElem) {\n          this.toggleSearchfield({\n            togglerElem,\n            resetFocus: !e.detail,\n          });\n        }\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(this.search, 'submit', (e) => {\n        e.preventDefault();\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(this.input, 'input', (e) => {\n        this.toggleSuggester({\n          inputElem: e.target,\n        });\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(this.searchImageInput, 'focusin', () => {\n        this.isSearchImageFileinputActivated = false;\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(this.searchImageInput, 'click', () => {\n        this.isSearchImageFileinputActivated = true;\n      }),\n      // inactivate search field on \"loosing focus\" within (an actual logic is a bit more complex)\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(this.field, 'focusout', (e) => {\n        if (\n          (e.relatedTarget || !this.isSearchImageFileinputActivated) &&\n          !this.field.contains(e.relatedTarget)\n        ) {\n          const initialTrigger = this.header._trigger;\n\n          if (initialTrigger) {\n            initialTrigger.classList.add(noTransitionKlass);\n            setTimeout(() => {\n              initialTrigger.classList.remove(noTransitionKlass);\n            }, 0);\n          }\n\n          this.toggleSearchfield({\n            force: false,\n            resetFocus: true,\n          });\n        }\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'keydown', (e) => {\n        if (e.key === 'Escape') {\n          this.toggleSearchfield({\n            force: false,\n            resetFocus: true,\n          });\n        }\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(this.suggester, 'click', (e) => {\n        const item = e.target.closest('.js-search__suggest-item');\n\n        if (item) {\n          this.unhighlightSuggestion();\n          this.selectSuggestion(item.dataset.suggestionId);\n        }\n      }),\n      // handle up/down arrows to highlight suggestions\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(this.input, 'keydown', (e) => {\n        if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n          e.preventDefault();\n\n          const suggesterItems = [].slice.call(\n            this.suggester.querySelectorAll('.js-search__suggest-item')\n          );\n          let highlightedIndex = suggesterItems.findIndex((el) =>\n            el.classList.contains(highlightedSuggestionKlass)\n          );\n          const increment = e.key === 'ArrowDown' ? 1 : -1;\n          const nextIndex = highlightedIndex + increment;\n          const next = suggesterItems[nextIndex < -1 ? suggesterItems.length - 1 : nextIndex];\n\n          this.unhighlightSuggestion();\n          next && this.highlightSuggestion(next);\n        }\n\n        if (e.key === 'Enter') {\n          const highlightedItem = this.suggester.querySelector(`.${highlightedSuggestionKlass}`);\n\n          if (highlightedItem) {\n            this.selectSuggestion(highlightedItem.dataset.suggestionId);\n          } else {\n            this.search.submit();\n          }\n        }\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'items-dropped', (e) => {\n        handleFileDrop(e);\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(\n        window,\n        'resize',\n        (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.debounce)(50, () => this.cleanup)\n      ),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(\n        window,\n        'orientationchange',\n        (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.debounce)(0, () => this.cleanup)\n      ),\n    ];\n\n    this.isInited = true;\n  }\n\n\n  /**\n   * Handle a search by provided image.\n   * @param file{File} - a File object\n   * @returns {Promise<void>}\n   */\n  handleImageSearch(file) {\n    console.log(file);\n  }\n\n  /**\n   * Add \"highlighted\" state for any highlighted suggestion item\n   * @param elem{HTMLElement} - required suggestion DOM element to highlight\n   */\n  highlightSuggestion(elem) {\n    elem.classList.add(highlightedSuggestionKlass);\n    elem.scrollIntoView();\n  }\n\n  /**\n   * Remove \"highlighted\" state for any highlighted suggestion item\n   */\n  unhighlightSuggestion() {\n    const highlighted = this.suggester.querySelector(`.${highlightedSuggestionKlass}`);\n    highlighted && highlighted.classList.remove(highlightedSuggestionKlass);\n  }\n\n  /**\n   * The action upon suggestion item is \"selected\"\n   * @param suggestionId{String} - the value of a `data-suggestion-id` attribute of a required suggestion item\n   */\n  selectSuggestion(suggestionId) {\n    alert(\n      `selected: ${this.suggester\n        .querySelector(`[data-suggestion-id=\"${suggestionId}\"]`)\n        .textContent.trim()}`\n    );\n  }\n\n  /**\n   * Toggle \"activated\" state for the suggestions box\n   * @param force{Boolean} - optional parameter to forcefully designate a toggled state\n   * @param inputElem{HTMLElement} - optional parameter for the `<input>` for which suggestions box is being toggled\n   */\n  toggleSuggester({ force, inputElem = this.input } = {}) {\n    const isToggled = inputElem.form.classList.toggle(\n      suggestingKlass,\n      typeof force === 'undefined' ? inputElem.value.length : force\n    );\n\n    if (!isToggled) {\n      this.unhighlightSuggestion();\n    }\n  }\n\n  /**\n   * Toggle the \"activated\" state of a search field (when it is hidden by default on narrow screen)\n   * @param force{Boolean} - optional activated state\n   * @param resetFocus{Boolean} - optional flag to reset a focus to the element which was focused before toggling happened\n   * @param togglerElem{HTMLElement} - optional DOM element by which the action was performed\n   */\n  toggleSearchfield({ force, resetFocus = false, togglerElem } = {}) {\n    let isToggled = this.header.classList.toggle(activeKlass, force);\n\n    if (isToggled) {\n      this.input.focus();\n    } else {\n      this.input.value = '';\n      this.search.classList.remove(suggestingKlass);\n      this.unhighlightSuggestion();\n    }\n\n    setTimeout(() => {\n      if (resetFocus && !isToggled && this.header._trigger) {\n        const currentTrigger = this.header._trigger;\n        currentTrigger.classList.add(noTransitionKlass);\n        currentTrigger.focus();\n        setTimeout(() => {\n          currentTrigger.classList.remove(noTransitionKlass);\n        }, 0);\n      }\n\n      this.header._trigger = togglerElem;\n    }, 0);\n  }\n\n  // deactivate search field if needed, based bootstrap `md` media-query\n  cleanup() {\n    if (!this.header.classList.contains(activeKlass)) {\n      return;\n    }\n\n    if (this.desktopSearchStyleMq.matches) {\n      this.toggleSearchfield({\n        force: false,\n      });\n    }\n  }\n  destroy() {\n    if (this.isInited) {\n      //unbind events\n      this.handlers.forEach((fn) => fn && fn());\n\n      // dereference handlers array\n      this.handlers = null;\n\n      // dereference DOM nodes\n      this.header = null;\n      this.search = null;\n      this.field = null;\n      this.input = null;\n      this.searchImageInput = null;\n      this.suggester = null;\n\n      this.dropManager.destroy();\n      this.dropManager = null;\n\n      this.isInited = false;\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Search);\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/components/Search.js?");

/***/ }),

/***/ "./src/js/components/Sidebar.js":
/*!**************************************!*\
  !*** ./src/js/components/Sidebar.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/utils */ \"./src/js/util/utils.js\");\n/* harmony import */ var _util_mediaQueryList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/mediaQueryList */ \"./src/js/util/mediaQueryList.js\");\n\n\n\n/**\n * Toggle sidebar\n */\n\nconst activeKlass = 'is-open';\nconst alwaysHideableKlass = 'sidebar_always-hideable';\nconst collapsedStateLocalStoragePrefix = '__unique-photo-gallery-key-for-details-state';\n\nlet sidebarId = 0;\n\ndocument.addEventListener('click', (e) => {\n  const toggler = e.target.closest('.js-sidebar-toggle');\n\n  toggler &&\n    toggler.dispatchEvent(\n      new CustomEvent('sidebar-toggle-click', {\n        bubbles: true,\n      })\n    );\n});\n\nclass Sidebar {\n  constructor(\n    sidebarElem,\n    options = {\n      saveState: false,\n    }\n  ) {\n    this.sidebar = sidebarElem;\n\n    if (!this.sidebar) {\n      return;\n    }\n\n    this.id = sidebarId += 1;\n    this.storageKey = `${collapsedStateLocalStoragePrefix}_${this.id}`;\n    this.options = options;\n\n    const that = this;\n    // `patchFocus()` cleanup function\n    let destroyPatchedFocus;\n    this.cleanupFuntions = [];\n\n    this.backdrop = this.sidebar.parentNode.querySelector('.sidebar-backdrop');\n\n    this.noOverlayingSidebarMq = matchMedia(_util_mediaQueryList__WEBPACK_IMPORTED_MODULE_1__.default.md);\n\n    let isIOSReflown = false;\n    /**\n     * Toggle visibility of a sidebar (i.e. when it is hidden by default on narrow screen)\n     * @param toggler{HTMLElement} - optional DOM element by which the action was performed\n     * @param force{Boolean} - optional visibility state\n     * @param resetFocus{Boolean} - optional flag to reset a focus to the element which was focused before toggling happened\n     */\n    function toggleSidebar({ toggler, force, resetFocus = true } = {}) {\n      const wasOpened = that.sidebar.classList.contains(activeKlass);\n\n      if (wasOpened === force) {\n        return;\n      }\n\n      // reflow iphone ios\n      if (!wasOpened && !isIOSReflown) {\n        const scrollableBody = that.sidebar.querySelector('.scrollbar');\n\n        that.sidebar.style.visibility = 'visible';\n        scrollableBody.style.overflow = 'hidden';\n        scrollableBody.offsetHeight;\n        scrollableBody.style.overflow = '';\n\n      }\n      function doTransition() {\n        that.sidebar.classList.toggle(activeKlass, force);\n        that.sidebar.dispatchEvent(\n          new CustomEvent(wasOpened ? 'sidebarhide' : 'sidebarshow', { bubbles: true })\n        );\n        setTimeout(() => {\n          if (resetFocus) {\n            const elementToFocus = wasOpened ? that.sidebar._trigger : that.sidebar;\n            elementToFocus && elementToFocus.focus();\n          }\n\n          that.sidebar._trigger = toggler;\n        }, 50);\n\n        if (that.options.saveState) {\n          saveCollapsedState();\n        }\n      }\n\n      if (!isIOSReflown) {\n        isIOSReflown = true;\n\n        setTimeout(() => {\n          const unbindTransitionend = (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(that.sidebar, 'transitionend', (e) => {\n            that.sidebar.style.visibility = '';\n            unbindTransitionend();\n          });\n\n          // run transition on the next event loop tick\n          doTransition();\n        }, 0);\n      } else {\n        doTransition();\n      }\n\n    }\n\n    function getCollapsedState() {\n      return that.sidebar.classList.contains(activeKlass);\n    }\n\n    function saveCollapsedState() {\n      localStorage.setItem(that.storageKey, JSON.stringify(getCollapsedState()));\n    }\n\n    // hide sidebar which wasn't hidden and then bootstrap `md` mq fired up\n    function cleanup() {\n      if (!that.sidebar.classList.contains(activeKlass)) {\n        return;\n      }\n\n      if (that.sidebar.classList.contains(alwaysHideableKlass) && that.isOverlaying()) {\n        that.sidebar.focus();\n      } else if (!that.sidebar.classList.contains(alwaysHideableKlass)) {\n        toggleSidebar({ force: false });\n      }\n    }\n\n    this.handlers = [\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'sidebar-toggle-click', (e) => {\n        const targetSidebar = document.querySelector(e.target.dataset && e.target.dataset.sidebar);\n\n        if (targetSidebar === that.sidebar) {\n          toggleSidebar({ toggler: e.target });\n        }\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'keydown', (e) => {\n        if (e.key === 'Escape') {\n          toggleSidebar({ force: false });\n        }\n      }),\n      this.backdrop &&\n        (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(this.backdrop, 'click', () => {\n          toggleSidebar({ force: false, resetFocus: false });\n        }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(window, 'beforeunload', () => {\n        if (that.options.saveState) {\n          saveCollapsedState();\n        }\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(window, 'resize', (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.debounce)(100, cleanup)),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(window, 'orientationchange', (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.debounce)(0, cleanup)),\n    ];\n\n    destroyPatchedFocus = (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.patchFocus)('sidebarshow', 'sidebarhide', () => that.isOverlaying());\n\n    this.cleanupFuntions.push(destroyPatchedFocus);\n\n    if (this.options.saveState && !that.isOverlaying()) {\n      const shouldBeShown = JSON.parse(localStorage.getItem(that.storageKey));\n\n      if (shouldBeShown) {\n        toggleSidebar({\n          force: true,\n        });\n      }\n    }\n\n    this.isInited = true;\n  }\n  isOverlaying() {\n    return !this.noOverlayingSidebarMq.matches;\n  }\n  destroy() {\n    if (this.isInited) {\n      // call any existing cleanup functions and dereference the array\n      this.cleanupFuntions.forEach((fn) => fn());\n      this.cleanupFuntions = null;\n\n      //unbind events\n      this.handlers.forEach((fn) => fn && fn());\n\n      // dereference handlers array\n      this.handlers = null;\n\n      // dereference DOM nodes\n      this.sidebar = null;\n      this.backdrop = null;\n\n      this.isInited = false;\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sidebar);\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/components/Sidebar.js?");

/***/ }),

/***/ "./src/js/components/SingleImageDropManager.js":
/*!*****************************************************!*\
  !*** ./src/js/components/SingleImageDropManager.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/utils */ \"./src/js/util/utils.js\");\n/* harmony import */ var _util_allowedMimeTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/allowedMimeTypes */ \"./src/js/util/allowedMimeTypes.js\");\n\n\n\nconst managerKlass = 'js-drop-manager';\nconst singleImageTransferKlass = 'is-single-image';\nconst uploadDecisionKlass = 'is-upload-preferred';\nconst decisionKey = 'Shift'; // should be a valid `KeyboardEvent.key` value: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n\n/**\n * Find out if a single file is being transferred.\n * \"Single file\" is defined as a single item in the `dataTransferItemList` with allowed MIME type present\n * (MIME type won't be present if it is a directory or a file without an extension).\n * @param dataTransfer - a `DataTransfer` object for a drag-n-drop (https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer)\n * @returns {boolean}\n */\nfunction isSingleAllowedImageBeingTransferred(dataTransfer) {\n  return (\n    dataTransfer.items.length === 1 &&\n    dataTransfer.items[0].type.length > 0 &&\n    _util_allowedMimeTypes__WEBPACK_IMPORTED_MODULE_1__.default.includes(dataTransfer.items[0].type)\n  );\n}\n\nlet instance = null;\n\n/**\n * A singleton. Manage a drop of an individual image file:\n * - handle UI for modifying the resulting drop action (search or upload)\n * - provide details for the latest single image file drop event\n */\nclass SingleImageDropManager {\n  constructor() {\n    if (instance) {\n      return instance;\n    }\n\n    this.stats = {\n      search: false,\n      upload: true,\n    };\n\n    const that = this;\n\n    let deciderHandlers = [];\n    let windowFocusHandlers = [];\n\n    function toggleSearchAbility(flag) {\n      const dropManager = document.querySelector(`.${managerKlass}`);\n\n      if (dropManager) {\n        dropManager.classList.toggle(uploadDecisionKlass, flag);\n        that.stats.search = flag;\n        that.stats.upload = !flag;\n      }\n    }\n\n    function resetToDefault() {\n      const dropManager = document.querySelector(`.${managerKlass}`);\n\n      if (dropManager) {\n        dropManager.classList.remove(singleImageTransferKlass);\n        dropManager.classList.remove(uploadDecisionKlass);\n        deciderHandlers.forEach((unbind) => unbind());\n        windowFocusHandlers.forEach((unbind) => unbind());\n      }\n    }\n\n    function processDraggedFiles(dataTransfer) {\n      const isAllowed = isSingleAllowedImageBeingTransferred(dataTransfer);\n      const isBrowserFocused = document.hasFocus();\n      const dropManager = document.querySelector(`.${managerKlass}`);\n\n      if (dropManager && isAllowed) {\n        if (isBrowserFocused) {\n          dropManager.classList.add(singleImageTransferKlass);\n        } else {\n          windowFocusHandlers = [\n            (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(window, 'focus', (e) => {\n              dropManager.classList.add(singleImageTransferKlass);\n            }),\n            (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(window, 'blur', (e) => {\n              dropManager.classList.remove(singleImageTransferKlass);\n            }),\n          ];\n        }\n\n        if ((0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.isKeyDown)(decisionKey)) {\n          toggleSearchAbility(true);\n        }\n\n        deciderHandlers = [\n          (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'keydown', (e) => {\n            if (e.key === decisionKey) {\n              toggleSearchAbility(true);\n            }\n          }),\n          (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'keyup', (e) => {\n            if (e.key === decisionKey) {\n              toggleSearchAbility(false);\n            }\n          }),\n        ];\n      }\n    }\n\n    this.handlers = [\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'drop-target-active', (e) => {\n        processDraggedFiles(e.detail.dataTransfer);\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'drop-target-inactive', (e) => {\n        resetToDefault();\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'items-dropped', (e) => {\n        resetToDefault();\n      }),\n    ];\n\n    this.isInited = true;\n  }\n  getLatestDropStats() {\n    return this.stats;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SingleImageDropManager);\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/components/SingleImageDropManager.js?");

/***/ }),

/***/ "./src/js/components/Upload.js":
/*!*************************************!*\
  !*** ./src/js/components/Upload.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/utils */ \"./src/js/util/utils.js\");\n/* harmony import */ var _util_allowedMimeTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/allowedMimeTypes */ \"./src/js/util/allowedMimeTypes.js\");\n/* harmony import */ var _SingleImageDropManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SingleImageDropManager */ \"./src/js/components/SingleImageDropManager.js\");\n\n\n\n\n\n/**\n * Upload. A singleton\n */\n\nlet instance = null;\n\nclass Upload {\n  constructor() {\n    if (instance) {\n      return instance;\n    }\n\n    const that = this;\n\n    this.dropManager = new _SingleImageDropManager__WEBPACK_IMPORTED_MODULE_2__.default();\n\n    function handleFileDrop(e) {\n      const isUploadDrop =\n        !that.dropManager.isInited || that.dropManager.getLatestDropStats().upload;\n\n      if (isUploadDrop) {\n        that.handleUpload(e.detail.fileArray);\n      }\n    }\n\n    this.handlers = [\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'change', (e) => {\n        const isUploadChange = e.target.matches('.js-upload__input');\n\n        if (isUploadChange) {\n          // filter passed files by MIME type\n          this.handleUpload(\n            [...e.target.files].filter((file) => _util_allowedMimeTypes__WEBPACK_IMPORTED_MODULE_1__.default.includes(file.type))\n          );\n        }\n      }),\n      (0,_util_utils__WEBPACK_IMPORTED_MODULE_0__.addEventListener)(document, 'items-dropped', (e) => {\n        handleFileDrop(e);\n      }),\n    ];\n\n    this.isInited = true;\n  }\n\n  /*\n   * Handle upload of passed files.\n   * The method receives an array of File objects as a `filesArray` argument.\n   * */\n  handleUpload(filesArray) {\n    if (!filesArray.length) {\n      return;\n    }\n\n    console.log(filesArray);\n    alert(`render upload view with ${filesArray.length} file${filesArray.length === 1 ? '' : 's'}`);\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Upload);\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/components/Upload.js?");

/***/ }),

/***/ "./src/js/components/editable.js":
/*!***************************************!*\
  !*** ./src/js/components/editable.js ***!
  \***************************************/
/***/ (() => {

eval("/*\n * Quick and (very) dirty code for editable details.\n * Should be replaced/incorporated with vue later, keeping the same functionality (I can help with that)\n * */\nconst editingKlass = 'is-editing';\n\nconst editableContainerKlass = 'js-editable';\nconst editableValueKlass = 'js-editable__val';\nconst formKlass = 'js-editable__form';\nconst textareaKlass = 'js-editable__area';\nconst confirmKlass = 'js-editable__confirm';\n\nfunction resize(tx) {\n  tx.style.height = 'auto';\n  tx.style.height = tx.scrollHeight + 'px';\n}\n\ndocument.addEventListener('mousedown', (e) => {\n\n  const editableValue = e.target.closest('.js-editable__val');\n  const editableTrigger = e.target.closest('.js-editable__trigger');\n  let container;\n  let textarea;\n  let clickedThing = editableValue || editableTrigger;\n\n  if (clickedThing) {\n\n    container = clickedThing.closest(`.${editableContainerKlass}`);\n    textarea = container.querySelector(`.${textareaKlass}`);\n\n    /*\n    * `<textarea>` somehow gets focused out on any mousedown,\n    * so without `setTimeout` the whole thing \"closes\" immediately after the opening\n    * */\n    setTimeout(() => {\n      container.classList.add(editingKlass);\n      container.querySelector(`.${textareaKlass}`).disabled = false;\n      resize(textarea);\n      textarea.focus();\n      textarea.select();\n    }, 0);\n  }\n});\n\ndocument.addEventListener('submit', (e) => {\n  const editableForm = e.target.closest(`.${formKlass}`);\n  let container;\n  let textarea;\n  let newValue;\n\n  e.preventDefault();\n\n  if (editableForm) {\n    container = editableForm.closest(`.${editableContainerKlass}`);\n    textarea = container.querySelector(`.${textareaKlass}`);\n\n    container.classList.remove(editingKlass);\n    newValue = textarea.value.trim();\n\n    if (newValue) {\n      container.querySelector(`.${editableValueKlass}`).innerHTML = newValue;\n      textarea.dataset.latestValue = newValue;\n    }\n  }\n});\n\ndocument.addEventListener('input', (e) => {\n  const tx = e.target.matches(`.${textareaKlass}`) && e.target;\n\n  tx && resize(tx);\n});\n\nlet isEditableConfirmMousePressed;\n\ndocument.addEventListener(\n  'mousedown',\n  (e) => {\n    const confirmBtn = e.target.closest(`.${confirmKlass}`);\n\n    if (confirmBtn) {\n      isEditableConfirmMousePressed = true;\n    }\n  },\n  true\n);\ndocument.addEventListener(\n  'mouseup',\n  (e) => {\n    const confirmBtn = e.target.closest(`.${confirmKlass}`);\n\n    if (confirmBtn) {\n      isEditableConfirmMousePressed = false;\n    }\n  },\n  true\n);\ndocument.addEventListener('focusout', (e) => {\n  const actionEntitiesSelector = `.${textareaKlass}, .${confirmKlass}`;\n  let container;\n  let textarea;\n\n  if (\n    e.target.matches(actionEntitiesSelector) &&\n    (!e.relatedTarget || !e.relatedTarget.matches(actionEntitiesSelector)) &&\n    !isEditableConfirmMousePressed\n  ) {\n    container = e.target.closest(`.${editableContainerKlass}`);\n    textarea = container.querySelector(`.${textareaKlass}`);\n\n    container.classList.remove(editingKlass);\n    container.querySelector(`.${textareaKlass}`).disabled = true;\n    textarea.value = textarea.dataset.latestValue || textarea.defaultValue;\n  }\n});\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'Escape') {\n    [].slice\n      .call(document.querySelectorAll(`.${editableContainerKlass}.${editingKlass}`))\n      .forEach((elem) => {\n        const textarea = elem.querySelector(`.${textareaKlass}`);\n\n        elem.classList.remove(editingKlass);\n        textarea.value = textarea.dataset.latestValue || textarea.defaultValue;\n      });\n  }\n});\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/components/editable.js?");

/***/ }),

/***/ "./src/js/components/global-misc.js":
/*!******************************************!*\
  !*** ./src/js/components/global-misc.js ***!
  \******************************************/
/***/ (() => {

eval("/*\n * Misc app-wide global code. Can be included and forgotten about\n * */\n\n/**\n * Allow bootstrap checkbox buttons (https://getbootstrap.com/docs/5.0/forms/checks-radios/#toggle-buttons)\n * to be activated with an \"enter\" key\n */\ndocument.addEventListener('keypress', (e) => {\n  if (e.target.matches('.btn-check') && e.key === 'Enter') {\n    e.target.checked = !e.target.checked;\n  }\n});\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/components/global-misc.js?");

/***/ }),

/***/ "./src/js/components/tags.js":
/*!***********************************!*\
  !*** ./src/js/components/tags.js ***!
  \***********************************/
/***/ (() => {

eval("/*\n * A dumb file for handling tags, feel free to write all you want here\n * */\n\n// WARNING: this code should exist in one form or another\n// (a click event handler with an exact same code as written, `alert` can be deleted)\ndocument.addEventListener('click', (e) => {\n  const tagDeleter = e.target.closest('.js-tag-delete');\n\n  if (tagDeleter) {\n    e.preventDefault();\n    alert('delete tag');\n  }\n});\n//\n// document.querySelector('#tag-input').addEventListener('input', (e) => {\n//   setTimeout(() => {\n//     document.querySelector('#tag-list').innerHTML = '<option value=\"San Francisco\">';\n//   }, 2000);\n// });\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/components/tags.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util_allowedMimeTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/allowedMimeTypes */ \"./src/js/util/allowedMimeTypes.js\");\n/* harmony import */ var _components_Sidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/Sidebar */ \"./src/js/components/Sidebar.js\");\n/* harmony import */ var _components_Search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Search */ \"./src/js/components/Search.js\");\n/* harmony import */ var _components_Upload__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/Upload */ \"./src/js/components/Upload.js\");\n/* harmony import */ var _components_GlobalDropTarget__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/GlobalDropTarget */ \"./src/js/components/GlobalDropTarget.js\");\n/* harmony import */ var _components_global_misc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/global-misc */ \"./src/js/components/global-misc.js\");\n/* harmony import */ var _components_global_misc__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_components_global_misc__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _components_tags__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/tags */ \"./src/js/components/tags.js\");\n/* harmony import */ var _components_tags__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_components_tags__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _components_editable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/editable */ \"./src/js/components/editable.js\");\n/* harmony import */ var _components_editable__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_components_editable__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n// misc app-wide global code, can be included and forgotten about:\n\n\n// misc things for demo purposes (see docs):\n\n\n\n// generic things\nconst globalDropTarget = new _components_GlobalDropTarget__WEBPACK_IMPORTED_MODULE_4__.default(_util_allowedMimeTypes__WEBPACK_IMPORTED_MODULE_0__.default);\nconst upload = new _components_Upload__WEBPACK_IMPORTED_MODULE_3__.default(document.querySelector('.js-upload'));\n\n// main page widgets\nconst contentSidebar = new _components_Sidebar__WEBPACK_IMPORTED_MODULE_1__.default(document.querySelector('.js-content-sidebar'));\nconst search = new _components_Search__WEBPACK_IMPORTED_MODULE_2__.default(document.querySelector('.js-search'));\n\n// image view widgets\nconst imageDetailsSidebar = new _components_Sidebar__WEBPACK_IMPORTED_MODULE_1__.default(document.querySelector('.js-image-details-sidebar'), {\n  saveState: true,\n});\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/index.js?");

/***/ }),

/***/ "./src/js/util/allowedMimeTypes.js":
/*!*****************************************!*\
  !*** ./src/js/util/allowedMimeTypes.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst allowedMimeTypes = [\n  'image/jpeg',\n  'image/png',\n  'image/gif',\n  'image/tiff',\n  'image/vnd.adobe.photoshop',\n];\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (allowedMimeTypes);\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/util/allowedMimeTypes.js?");

/***/ }),

/***/ "./src/js/util/mediaQueryList.js":
/*!***************************************!*\
  !*** ./src/js/util/mediaQueryList.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * A list of media-queries used in CSS (mostly values from bootstrap). Change these values\n * if you change them in CSS (i.e. when changing breakpoints values in `customised-bootstrap.scss`).\n *\n * The mobile-first approach is used (`min-width` and up), which should be a preferred way to write media-queries\n * */\nconst mq = {\n  xs: '(min-width: 0)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1400px)',\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (mq);\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/util/mediaQueryList.js?");

/***/ }),

/***/ "./src/js/util/utils.js":
/*!******************************!*\
  !*** ./src/js/util/utils.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"patchFocus\": () => (/* binding */ patchFocus),\n/* harmony export */   \"debounce\": () => (/* binding */ debounce),\n/* harmony export */   \"addEventListener\": () => (/* binding */ addEventListener),\n/* harmony export */   \"isKeyDown\": () => (/* binding */ isKeyDown)\n/* harmony export */ });\n/**\n * Make tabbing trapped within a \"popup\" container (i.e. modal)\n * @param showEvent{String} - The event which is triggered when the container shows\n * @param hideEvent{String} - The event which is triggered when the container hides\n * @param testIfShouldTrap{Function} - tester function to determine if focus should be kept being trapped, or not\n */\nfunction patchFocus(showEvent, hideEvent, testIfShouldTrap = () => true) {\n  // https://github.com/twbs/bootstrap/issues/28481#issuecomment-763017750\n  const TAB_KEY = 9;\n  const focusableSelectors = [\n    'a[href]:not([tabindex^=\"-\"])',\n    'area[href]:not([tabindex^=\"-\"])',\n    'input:not([type=\"hidden\"]):not([type=\"radio\"]):not([disabled]):not([tabindex^=\"-\"])',\n    'input[type=\"radio\"]:not([disabled]):not([tabindex^=\"-\"]):checked',\n    'select:not([disabled]):not([tabindex^=\"-\"])',\n    'textarea:not([disabled]):not([tabindex^=\"-\"])',\n    'button:not([disabled]):not([tabindex^=\"-\"])',\n    'iframe:not([tabindex^=\"-\"])',\n    'audio[controls]:not([tabindex^=\"-\"])',\n    'video[controls]:not([tabindex^=\"-\"])',\n    '[contenteditable]:not([tabindex^=\"-\"])',\n    '[tabindex]:not([tabindex^=\"-\"])',\n  ];\n\n  function getFocusableChildren(node) {\n    return [].filter.call(\n      node.querySelectorAll(focusableSelectors.join(',')),\n      (child) => !!(child.offsetWidth || child.offsetHeight || child.getClientRects().length)\n    );\n  }\n\n  function trapTabKey(node, event) {\n    const focusableChildren = getFocusableChildren(node);\n    const focusedItemIndex = focusableChildren.indexOf(document.activeElement);\n\n    if (event.shiftKey && focusedItemIndex === 0) {\n      focusableChildren[focusableChildren.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusedItemIndex === focusableChildren.length - 1) {\n      focusableChildren[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  function bindKeypress(event, container) {\n    if (container && event.which === TAB_KEY && testIfShouldTrap()) {\n      trapTabKey(container, event);\n    }\n  }\n\n  const handler = {\n    container: null,\n    handleEvent(e) {\n      bindKeypress(e, this.container);\n    },\n  };\n\n  function onShow(evt) {\n    handler.container = evt.target;\n    document.addEventListener('keydown', handler);\n  }\n  function onHide(evt) {\n    handler.container = null;\n    document.removeEventListener('keydown', handler);\n  }\n\n  document.addEventListener(showEvent, onShow);\n  document.addEventListener(hideEvent, onHide);\n\n  function destroy() {\n    document.removeEventListener(showEvent, onShow);\n    document.removeEventListener(hideEvent, onHide);\n  }\n\n  return destroy;\n}\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n * @param wait\n * @param func\n * @param immediate\n * @returns {function(...[*]=)}\n */\nfunction debounce(wait, func, immediate) {\n  let timeout;\n  return function () {\n    const context = this,\n      args = arguments;\n    const later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\n/**\n * Helper of `addEventListener`.\n * @param elem{HTMLElement} - element to bind event\n * @param type{String} - event type\n * @param listener{Function} - event listener\n * @param options{Boolean|Object} - optional parameter which passed as a third parameter to native `addEventListener`\n * @returns {function(): *} - the unbind callback\n */\nfunction addEventListener(elem, type, listener, options) {\n  elem.addEventListener(type, listener, options);\n\n  return () => elem.removeEventListener(type, listener, options);\n}\n\n/**\n * Detect if a specific key is down.\n * `key` should be a valid `KeyboardEvent.key` value: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n * @returns {function(*=): *|boolean}\n */\nconst isKeyDown = (function isKeyDown() {\n  const state = {};\n\n  window.addEventListener('keyup', (e) => (state[e.key] = false));\n  window.addEventListener('keydown', (e) => (state[e.key] = true));\n\n  return (key) => (state.hasOwnProperty(key) && state[key]) || false;\n})();\n\n\n//# sourceURL=webpack://photo-storage-and-gallery/./src/js/util/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/index.js");
/******/ 	
/******/ })()
;